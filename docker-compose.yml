version: '3.8'
services:
  retronova-db:
    image: postgres:14.1-alpine
    container_name: retronova-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    networks:
      - retronova-network

  retronova-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: retronova-app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      retronova-db:
        condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - ./app:/app
    networks:
      - retronova-network

#  test:
#    build: .
#    command: ["pytest","-v", "--cov=app", "--cov-report=term-missing", "tests/"] # Commande pour ex√©cuter tes tests
#    container_name: retronova-test
#    environment:
#      - DATABASE_URL=sqlite:///./test.db
#    volumes:
#      - .:/app


volumes:
  pgdata:

networks:
  retronova-network: